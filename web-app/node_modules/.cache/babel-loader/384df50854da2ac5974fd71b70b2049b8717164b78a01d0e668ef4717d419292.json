{"ast":null,"code":"import axios from 'axios';\nimport { createUrl, log } from '../utils/utils';\nexport async function removeItemFromCart(productId) {\n  const url = createUrl('/cart/' + productId);\n  try {\n    // get the current user's token from session storage\n    const {\n      token\n    } = sessionStorage;\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token\n      }\n    };\n\n    // make the api call using the token in the header\n    const response = await axios.delete(url, header);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function updateItemQuantity(productId, quantity) {\n  const url = createUrl('/cart/quantity/' + productId);\n  try {\n    // get the current user's token from session storage\n    const {\n      token\n    } = sessionStorage;\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token\n      }\n    };\n    const body = {\n      quantity\n    };\n\n    // make the api call using the token in the header\n    const response = await axios.put(url, body, header);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function addToCart(userId, productId) {\n  // const url = createUrl('/cart/')\n  const url = createUrl(`/carts/${userId}/addProduct/${productId}`);\n  try {\n    // get the current user's token from session storage\n    const token = sessionStorage.getItem('jwt');\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token\n      }\n    };\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const body = {\n      // productId,\n      // quantity: 1,\n    };\n\n    // make the api call using the token in the header\n    const response = await axios.post(url, config);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function getCartItems() {\n  const url = createUrl('/cart/');\n  try {\n    // get the current user's token from session storage\n    const {\n      token\n    } = sessionStorage;\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token\n      }\n    };\n\n    // make the api call using the token in the header\n    const response = await axios.get(url, header);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}","map":{"version":3,"names":["axios","createUrl","log","removeItemFromCart","productId","url","token","sessionStorage","header","headers","response","delete","data","ex","updateItemQuantity","quantity","body","put","addToCart","userId","getItem","config","Authorization","post","getCartItems","get"],"sources":["C:/Users/ratho/OneDrive/Desktop/sunbeam_git/react-express-sample/ecommerce-app/web-app/src/services/cart.js"],"sourcesContent":["import axios from 'axios'\nimport { createUrl, log } from '../utils/utils'\n\nexport async function removeItemFromCart(productId) {\n  const url = createUrl('/cart/' + productId)\n  try {\n    // get the current user's token from session storage\n    const { token } = sessionStorage\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token,\n      },\n    }\n\n    // make the api call using the token in the header\n    const response = await axios.delete(url, header)\n    log(response.data)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n\nexport async function updateItemQuantity(productId, quantity) {\n  const url = createUrl('/cart/quantity/' + productId)\n  try {\n    // get the current user's token from session storage\n    const { token } = sessionStorage\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token,\n      },\n    }\n\n    const body = {\n      quantity,\n    }\n\n    // make the api call using the token in the header\n    const response = await axios.put(url, body, header)\n    log(response.data)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n\nexport async function addToCart(userId,productId) {\n  // const url = createUrl('/cart/')\n  const url = createUrl(`/carts/${userId}/addProduct/${productId}`)\n  \n  try {\n    // get the current user's token from session storage\n    const token = sessionStorage.getItem('jwt');\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token,\n      },\n    }\n\n    const config = {\n      headers:{Authorization:`Bearer ${token}`}\n    };\n\n\n    const body = {\n      // productId,\n      // quantity: 1,\n    }\n\n    // make the api call using the token in the header\n    const response = await axios.post(url, config)\n    log(response.data)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n\nexport async function getCartItems() {\n  const url = createUrl('/cart/')\n  try {\n    // get the current user's token from session storage\n    const { token } = sessionStorage\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        token,\n      },\n    }\n\n    // make the api call using the token in the header\n    const response = await axios.get(url, header)\n    log(response.data)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}